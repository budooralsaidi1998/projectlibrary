// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Systemlibrary;

#nullable disable

namespace Systemlibrary.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241113054052_updatelast")]
    partial class updatelast
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Systemlibrary.models.adming", b =>
                {
                    b.Property<int>("adminid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("adminid"));

                    b.Property<string>("admin_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("admin_password")
                        .HasColumnType("int");

                    b.HasKey("adminid");

                    b.ToTable("admings");
                });

            modelBuilder.Entity("Systemlibrary.models.book", b =>
                {
                    b.Property<int>("bookid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookid"));

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("borrowcopies")
                        .HasColumnType("int");

                    b.Property<int>("categoryid")
                        .HasColumnType("int");

                    b.Property<int>("copies_number")
                        .HasColumnType("int");

                    b.Property<string>("namebook")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price_book")
                        .HasColumnType("float");

                    b.HasKey("bookid");

                    b.HasIndex("categoryid");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Systemlibrary.models.borrowing", b =>
                {
                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.Property<int>("bookid")
                        .HasColumnType("int");

                    b.Property<DateTime>("borrow_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("actual_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isreturn")
                        .HasColumnType("bit");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("return_date")
                        .HasColumnType("datetime2");

                    b.HasKey("userid", "bookid", "borrow_date");

                    b.HasIndex("bookid");

                    b.ToTable("borrowings");
                });

            modelBuilder.Entity("Systemlibrary.models.category", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CId"));

                    b.Property<string>("cat_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("number_categery")
                        .HasColumnType("int");

                    b.HasKey("CId");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Systemlibrary.models.user", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userid"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RGender")
                        .HasColumnType("int");

                    b.Property<string>("userEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Systemlibrary.models.book", b =>
                {
                    b.HasOne("Systemlibrary.models.category", "category")
                        .WithMany("Books")
                        .HasForeignKey("categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("Systemlibrary.models.borrowing", b =>
                {
                    b.HasOne("Systemlibrary.models.book", "books")
                        .WithMany("borrows")
                        .HasForeignKey("bookid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Systemlibrary.models.user", "user")
                        .WithMany("Borrowings")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("books");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Systemlibrary.models.book", b =>
                {
                    b.Navigation("borrows");
                });

            modelBuilder.Entity("Systemlibrary.models.category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Systemlibrary.models.user", b =>
                {
                    b.Navigation("Borrowings");
                });
#pragma warning restore 612, 618
        }
    }
}
